// Generated by view binder compiler. Do not edit!
package com.example.mediassist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mediassist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ScheduleAppointmentFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView appointment;

  @NonNull
  public final Button bookAptBtn;

  @NonNull
  public final RecyclerView calendarRecyclerView;

  @NonNull
  public final TextView docDetails;

  @NonNull
  public final CardView docDetailsCard;

  @NonNull
  public final TextView docName;

  @NonNull
  public final TextView docSpecialist;

  @NonNull
  public final TextView monthYearTV;

  @NonNull
  public final Button nextWeekAction;

  @NonNull
  public final Button previousWeekAction;

  @NonNull
  public final TextView workTime;

  @NonNull
  public final TextView workTimeDetails;

  private ScheduleAppointmentFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView appointment, @NonNull Button bookAptBtn,
      @NonNull RecyclerView calendarRecyclerView, @NonNull TextView docDetails,
      @NonNull CardView docDetailsCard, @NonNull TextView docName, @NonNull TextView docSpecialist,
      @NonNull TextView monthYearTV, @NonNull Button nextWeekAction,
      @NonNull Button previousWeekAction, @NonNull TextView workTime,
      @NonNull TextView workTimeDetails) {
    this.rootView = rootView;
    this.appointment = appointment;
    this.bookAptBtn = bookAptBtn;
    this.calendarRecyclerView = calendarRecyclerView;
    this.docDetails = docDetails;
    this.docDetailsCard = docDetailsCard;
    this.docName = docName;
    this.docSpecialist = docSpecialist;
    this.monthYearTV = monthYearTV;
    this.nextWeekAction = nextWeekAction;
    this.previousWeekAction = previousWeekAction;
    this.workTime = workTime;
    this.workTimeDetails = workTimeDetails;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ScheduleAppointmentFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ScheduleAppointmentFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.schedule_appointment_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ScheduleAppointmentFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appointment;
      TextView appointment = ViewBindings.findChildViewById(rootView, id);
      if (appointment == null) {
        break missingId;
      }

      id = R.id.bookAptBtn;
      Button bookAptBtn = ViewBindings.findChildViewById(rootView, id);
      if (bookAptBtn == null) {
        break missingId;
      }

      id = R.id.calendarRecyclerView;
      RecyclerView calendarRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (calendarRecyclerView == null) {
        break missingId;
      }

      id = R.id.docDetails;
      TextView docDetails = ViewBindings.findChildViewById(rootView, id);
      if (docDetails == null) {
        break missingId;
      }

      id = R.id.doc_details_card;
      CardView docDetailsCard = ViewBindings.findChildViewById(rootView, id);
      if (docDetailsCard == null) {
        break missingId;
      }

      id = R.id.docName;
      TextView docName = ViewBindings.findChildViewById(rootView, id);
      if (docName == null) {
        break missingId;
      }

      id = R.id.docSpecialist;
      TextView docSpecialist = ViewBindings.findChildViewById(rootView, id);
      if (docSpecialist == null) {
        break missingId;
      }

      id = R.id.monthYearTV;
      TextView monthYearTV = ViewBindings.findChildViewById(rootView, id);
      if (monthYearTV == null) {
        break missingId;
      }

      id = R.id.nextWeekAction;
      Button nextWeekAction = ViewBindings.findChildViewById(rootView, id);
      if (nextWeekAction == null) {
        break missingId;
      }

      id = R.id.previousWeekAction;
      Button previousWeekAction = ViewBindings.findChildViewById(rootView, id);
      if (previousWeekAction == null) {
        break missingId;
      }

      id = R.id.workTime;
      TextView workTime = ViewBindings.findChildViewById(rootView, id);
      if (workTime == null) {
        break missingId;
      }

      id = R.id.workTimeDetails;
      TextView workTimeDetails = ViewBindings.findChildViewById(rootView, id);
      if (workTimeDetails == null) {
        break missingId;
      }

      return new ScheduleAppointmentFragmentBinding((ConstraintLayout) rootView, appointment,
          bookAptBtn, calendarRecyclerView, docDetails, docDetailsCard, docName, docSpecialist,
          monthYearTV, nextWeekAction, previousWeekAction, workTime, workTimeDetails);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
