// Generated by view binder compiler. Do not edit!
package com.example.mediassist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mediassist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WelcomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button signinButtonView;

  @NonNull
  public final Button signupButtonView;

  @NonNull
  public final CardView welcomeCardView;

  @NonNull
  public final TextView welcomeDescrTextView;

  @NonNull
  public final ConstraintLayout welcomeFragment;

  @NonNull
  public final ImageView welcomeImageView;

  @NonNull
  public final TextView welcomeTitleTextView;

  private WelcomeBinding(@NonNull ConstraintLayout rootView, @NonNull Button signinButtonView,
      @NonNull Button signupButtonView, @NonNull CardView welcomeCardView,
      @NonNull TextView welcomeDescrTextView, @NonNull ConstraintLayout welcomeFragment,
      @NonNull ImageView welcomeImageView, @NonNull TextView welcomeTitleTextView) {
    this.rootView = rootView;
    this.signinButtonView = signinButtonView;
    this.signupButtonView = signupButtonView;
    this.welcomeCardView = welcomeCardView;
    this.welcomeDescrTextView = welcomeDescrTextView;
    this.welcomeFragment = welcomeFragment;
    this.welcomeImageView = welcomeImageView;
    this.welcomeTitleTextView = welcomeTitleTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WelcomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WelcomeBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.welcome, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WelcomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.signinButtonView;
      Button signinButtonView = ViewBindings.findChildViewById(rootView, id);
      if (signinButtonView == null) {
        break missingId;
      }

      id = R.id.signupButtonView;
      Button signupButtonView = ViewBindings.findChildViewById(rootView, id);
      if (signupButtonView == null) {
        break missingId;
      }

      id = R.id.welcomeCardView;
      CardView welcomeCardView = ViewBindings.findChildViewById(rootView, id);
      if (welcomeCardView == null) {
        break missingId;
      }

      id = R.id.welcomeDescrTextView;
      TextView welcomeDescrTextView = ViewBindings.findChildViewById(rootView, id);
      if (welcomeDescrTextView == null) {
        break missingId;
      }

      ConstraintLayout welcomeFragment = (ConstraintLayout) rootView;

      id = R.id.welcomeImageView;
      ImageView welcomeImageView = ViewBindings.findChildViewById(rootView, id);
      if (welcomeImageView == null) {
        break missingId;
      }

      id = R.id.welcomeTitleTextView;
      TextView welcomeTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (welcomeTitleTextView == null) {
        break missingId;
      }

      return new WelcomeBinding((ConstraintLayout) rootView, signinButtonView, signupButtonView,
          welcomeCardView, welcomeDescrTextView, welcomeFragment, welcomeImageView,
          welcomeTitleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
