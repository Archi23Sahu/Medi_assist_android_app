// Generated by view binder compiler. Do not edit!
package com.example.mediassist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mediassist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddClinicAdminBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView clinicAdminClinicLabel;

  @NonNull
  public final Button clinicAdminDeleteButton;

  @NonNull
  public final Button clinicAdminEditButton;

  @NonNull
  public final TextView clinicAdminEmailErrorText;

  @NonNull
  public final TextView clinicAdminEmailLabel;

  @NonNull
  public final EditText clinicAdminEmailText;

  @NonNull
  public final TextView clinicAdminNameErrorText;

  @NonNull
  public final TextView clinicAdminNameLabel;

  @NonNull
  public final EditText clinicAdminNameText;

  @NonNull
  public final TextView clinicAdminPhoneNumberErrorText;

  @NonNull
  public final TextView clinicAdminPhoneNumberLabel;

  @NonNull
  public final EditText clinicAdminPhoneNumberText;

  @NonNull
  public final Button clinicAdminSaveButton;

  @NonNull
  public final ProgressBar doctorProgressBar;

  @NonNull
  public final Spinner spinner;

  private AddClinicAdminBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView clinicAdminClinicLabel, @NonNull Button clinicAdminDeleteButton,
      @NonNull Button clinicAdminEditButton, @NonNull TextView clinicAdminEmailErrorText,
      @NonNull TextView clinicAdminEmailLabel, @NonNull EditText clinicAdminEmailText,
      @NonNull TextView clinicAdminNameErrorText, @NonNull TextView clinicAdminNameLabel,
      @NonNull EditText clinicAdminNameText, @NonNull TextView clinicAdminPhoneNumberErrorText,
      @NonNull TextView clinicAdminPhoneNumberLabel, @NonNull EditText clinicAdminPhoneNumberText,
      @NonNull Button clinicAdminSaveButton, @NonNull ProgressBar doctorProgressBar,
      @NonNull Spinner spinner) {
    this.rootView = rootView;
    this.clinicAdminClinicLabel = clinicAdminClinicLabel;
    this.clinicAdminDeleteButton = clinicAdminDeleteButton;
    this.clinicAdminEditButton = clinicAdminEditButton;
    this.clinicAdminEmailErrorText = clinicAdminEmailErrorText;
    this.clinicAdminEmailLabel = clinicAdminEmailLabel;
    this.clinicAdminEmailText = clinicAdminEmailText;
    this.clinicAdminNameErrorText = clinicAdminNameErrorText;
    this.clinicAdminNameLabel = clinicAdminNameLabel;
    this.clinicAdminNameText = clinicAdminNameText;
    this.clinicAdminPhoneNumberErrorText = clinicAdminPhoneNumberErrorText;
    this.clinicAdminPhoneNumberLabel = clinicAdminPhoneNumberLabel;
    this.clinicAdminPhoneNumberText = clinicAdminPhoneNumberText;
    this.clinicAdminSaveButton = clinicAdminSaveButton;
    this.doctorProgressBar = doctorProgressBar;
    this.spinner = spinner;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddClinicAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddClinicAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_clinic_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddClinicAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clinic_admin_clinic_label;
      TextView clinicAdminClinicLabel = ViewBindings.findChildViewById(rootView, id);
      if (clinicAdminClinicLabel == null) {
        break missingId;
      }

      id = R.id.clinic_admin_delete_button;
      Button clinicAdminDeleteButton = ViewBindings.findChildViewById(rootView, id);
      if (clinicAdminDeleteButton == null) {
        break missingId;
      }

      id = R.id.clinic_admin_edit_button;
      Button clinicAdminEditButton = ViewBindings.findChildViewById(rootView, id);
      if (clinicAdminEditButton == null) {
        break missingId;
      }

      id = R.id.clinic_admin_email_error_text;
      TextView clinicAdminEmailErrorText = ViewBindings.findChildViewById(rootView, id);
      if (clinicAdminEmailErrorText == null) {
        break missingId;
      }

      id = R.id.clinic_admin_email_label;
      TextView clinicAdminEmailLabel = ViewBindings.findChildViewById(rootView, id);
      if (clinicAdminEmailLabel == null) {
        break missingId;
      }

      id = R.id.clinic_admin_email_text;
      EditText clinicAdminEmailText = ViewBindings.findChildViewById(rootView, id);
      if (clinicAdminEmailText == null) {
        break missingId;
      }

      id = R.id.clinic_admin_name_error_text;
      TextView clinicAdminNameErrorText = ViewBindings.findChildViewById(rootView, id);
      if (clinicAdminNameErrorText == null) {
        break missingId;
      }

      id = R.id.clinic_admin_name_label;
      TextView clinicAdminNameLabel = ViewBindings.findChildViewById(rootView, id);
      if (clinicAdminNameLabel == null) {
        break missingId;
      }

      id = R.id.clinic_admin_name_text;
      EditText clinicAdminNameText = ViewBindings.findChildViewById(rootView, id);
      if (clinicAdminNameText == null) {
        break missingId;
      }

      id = R.id.clinic_admin_phone_number_error_text;
      TextView clinicAdminPhoneNumberErrorText = ViewBindings.findChildViewById(rootView, id);
      if (clinicAdminPhoneNumberErrorText == null) {
        break missingId;
      }

      id = R.id.clinic_admin_phone_number_label;
      TextView clinicAdminPhoneNumberLabel = ViewBindings.findChildViewById(rootView, id);
      if (clinicAdminPhoneNumberLabel == null) {
        break missingId;
      }

      id = R.id.clinic_admin_phone_number_text;
      EditText clinicAdminPhoneNumberText = ViewBindings.findChildViewById(rootView, id);
      if (clinicAdminPhoneNumberText == null) {
        break missingId;
      }

      id = R.id.clinic_admin_save_button;
      Button clinicAdminSaveButton = ViewBindings.findChildViewById(rootView, id);
      if (clinicAdminSaveButton == null) {
        break missingId;
      }

      id = R.id.doctor_progress_bar;
      ProgressBar doctorProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (doctorProgressBar == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      return new AddClinicAdminBinding((RelativeLayout) rootView, clinicAdminClinicLabel,
          clinicAdminDeleteButton, clinicAdminEditButton, clinicAdminEmailErrorText,
          clinicAdminEmailLabel, clinicAdminEmailText, clinicAdminNameErrorText,
          clinicAdminNameLabel, clinicAdminNameText, clinicAdminPhoneNumberErrorText,
          clinicAdminPhoneNumberLabel, clinicAdminPhoneNumberText, clinicAdminSaveButton,
          doctorProgressBar, spinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
