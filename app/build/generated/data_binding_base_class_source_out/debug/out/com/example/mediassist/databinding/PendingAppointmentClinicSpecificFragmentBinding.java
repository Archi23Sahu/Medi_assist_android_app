// Generated by view binder compiler. Do not edit!
package com.example.mediassist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mediassist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pl.droidsonroids.gif.GifImageView;

public final class PendingAppointmentClinicSpecificFragmentBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ProgressBar categoryListProgressBar;

  @NonNull
  public final GifImageView clinicEmptyGif;

  @NonNull
  public final TextView clinicNotFoundText;

  @NonNull
  public final RecyclerView idRVCoursePendingAppointmentClinicSpecific;

  @NonNull
  public final LinearLayoutCompat linearLayout;

  private PendingAppointmentClinicSpecificFragmentBinding(@NonNull FrameLayout rootView,
      @NonNull ProgressBar categoryListProgressBar, @NonNull GifImageView clinicEmptyGif,
      @NonNull TextView clinicNotFoundText,
      @NonNull RecyclerView idRVCoursePendingAppointmentClinicSpecific,
      @NonNull LinearLayoutCompat linearLayout) {
    this.rootView = rootView;
    this.categoryListProgressBar = categoryListProgressBar;
    this.clinicEmptyGif = clinicEmptyGif;
    this.clinicNotFoundText = clinicNotFoundText;
    this.idRVCoursePendingAppointmentClinicSpecific = idRVCoursePendingAppointmentClinicSpecific;
    this.linearLayout = linearLayout;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PendingAppointmentClinicSpecificFragmentBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PendingAppointmentClinicSpecificFragmentBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pending_appointment_clinic_specific_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PendingAppointmentClinicSpecificFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category_list_progress_bar;
      ProgressBar categoryListProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (categoryListProgressBar == null) {
        break missingId;
      }

      id = R.id.clinic_empty_gif;
      GifImageView clinicEmptyGif = ViewBindings.findChildViewById(rootView, id);
      if (clinicEmptyGif == null) {
        break missingId;
      }

      id = R.id.clinic_not_found_text;
      TextView clinicNotFoundText = ViewBindings.findChildViewById(rootView, id);
      if (clinicNotFoundText == null) {
        break missingId;
      }

      id = R.id.idRVCoursePendingAppointmentClinicSpecific;
      RecyclerView idRVCoursePendingAppointmentClinicSpecific = ViewBindings.findChildViewById(rootView, id);
      if (idRVCoursePendingAppointmentClinicSpecific == null) {
        break missingId;
      }

      id = R.id.linear_layout;
      LinearLayoutCompat linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      return new PendingAppointmentClinicSpecificFragmentBinding((FrameLayout) rootView,
          categoryListProgressBar, clinicEmptyGif, clinicNotFoundText,
          idRVCoursePendingAppointmentClinicSpecific, linearLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
